assignment: 09_whack_a_mole
dir: levels/Level1/Module4/src/_09_whack_a_mole
lesson: 09_whack_a_mole
level: Level1
meta:
  assignment: 09_whack_a_mole
  description: ''
  lesson: 09_whack_a_mole
  level: Level1
  module: Module4
  oassignment: 09_whack_a_mole
  opath: Level1/Module4/src/_09_whack_a_mole
  title: 09 Whack A Mole
module: Module4
resources: []
text: "\n\n# Whack-a-Mole\n\nWe are going to make a game where the user has to click\
  \ on a \"mole\". The game is timed so the user can get their \"whack rate\".\n1.\
  \ Start building a basic Swing GUI to hold the game shown below (JFrame, JPanel,\
  \ etc.)\n2. Make a drawButtons method that takes a random number as a parameter.\
  \ It should make a GUI like the one in the picture below, but the \u201Cmole!\u201D\
  \ location will be random each time the frame is drawn.\n\n[Hint: set the size of\
  \ the frame rather than packing it.]\n\n3. If they click on a button other than\
  \ \u201Cmole!\u201D, use this speak() method to tell them they missed.\n```\n\n\
  \    static void speak(String words) {\n        if( System.getProperty( \"os.name\"\
  \ ).contains( \"Windows\" ) ) {\n            String cmd = \"PowerShell -Command\
  \ \\\"Add-Type -AssemblyName System.Speech; (New-Object System.Speech.Synthesis.SpeechSynthesizer).Speak('\"\
  \n                    + words + \"');\\\"\";\n            try {\n              \
  \  Runtime.getRuntime().exec( cmd ).waitFor();\n            } catch( Exception e\
  \ ) {\n                e.printStackTrace();\n            }\n        } else {\n \
  \           try {\n                Runtime.getRuntime().exec( \"say \" + words ).waitFor();\n\
  \            } catch( Exception e ) {\n                e.printStackTrace();\n  \
  \          }\n        }\n    }\n```\n4. Dispose of the frame and draw the buttons\
  \ anew.\n\n5. After they\u2019ve whacked 10 moles, call this endGame() method.\n\
  ```\nprivate void endGame(Date timeAtStart, int molesWhacked) { \n    Date timeAtEnd\
  \ = new Date();\n    JOptionPane.showMessageDialog(null, \"Your whack rate is \"\
  \n            + ((timeAtEnd.getTime() - timeAtStart.getTime()) / 1000.00 / molesWhacked)\n\
  \                  + \" moles per second.\");\n}\n```\n6. Count how many times they\
  \ hit something other than the mole! button and change the \"missed\" comments each\
  \ time (be nice). When they have missed five times, tell them they have lost, and\
  \ end the game.\nOption: find out how you can use the switch statement to code this.\n\
  7. Find a sound file (.wav) and place it in your Java package. Call this playSound()\
  \ method when they hit a mole.\n```\nprivate void playSound(String fileName) { \n\
  \    AudioClip sound = JApplet.newAudioClip(getClass().getResource(fileName));\n\
  \    sound.play();\n}\n```\n\n\n"

assignment: 11_binary_converter
dir: levels/Level1/Module1/src/_11_binary_converter
lesson: 11_binary_converter
level: Level1
module: Module1
oassignment: 11_binary_converter
opath: Level1/Module1/src/_11_binary_converter
resources:
- /Users/eric/proj/league-projects/curriculum/java-modules/levels/Level1/Module1/src/_11_binary_converter/.web/FlappyBirdScreenShot.png
text: "\n\n# Flappy Bird\n\n1. Start a new sketch with draw and setup methods.\n\n\
  2. Set your canvas size in the setup method\nsize(width, height)\n3. In your draw\
  \ method, set a background, and draw a ball (bird) on the screen.\n```\nbackground(red,\
  \ green, blue);\nfill(red, green, blue);\nstroke(red, green, blue);\nellipse(x,\
  \ y, width, height);\n```\n4. Make the bird fall down\nHint: make variables for\
  \ the bird's X and Y position and use them for the ellipse in the draw method.\n\
  5. Add velocity to the bird.\nHint: make a variable for the velocity of the bird\
  \ in the Y direction (up). Changing its value should change the velocity of your\
  \ bird.\nint birdYVelocity = -10;\n6.  Give the bird gravity.\nHint: make a variable\
  \ for the gravity pulling the bird down. Gravity should continually increase the\
  \ value of birdYVelocity.\nint gravity = 1;\n7. Make the bird jump (flap) when the\
  \ mouse is clicked.\nHint: construct a mousePressed() method the same way setup()\
  \ and draw() were made.\nIn this method, reset the bird\u2019s velocity to make\
  \ the bird rise.\n8.  Draw a pipe coming down from the top of the sketch.\n\nIn\
  \ the draw() method:\nfill(red, green, blue);\nrect(x, y, width, height);\n9. Make\
  \ the pipe move from right to left.\n\nHint: make a variable for the pipe X position\
  \ and change it in the draw method.\n10. Make the pipe teleport back to the right\
  \ side of the screen once it has passed through the left. This will simulate the\
  \ repeating pipes coming from the right of the screen.\nTip: Put this code into\
  \ a teleportPipes() method and you can also call it from the setup() method to create\
  \ the first pipes.\n11. Set the upper pipe's height to a new random number each\
  \ time it teleports\nint upperPipeHeight = (int) random(100, 400);\n12. Create a\
  \ variable, pipeGap, to represent the gap between the pipes. Make sure the gap is\
  \ big enough for the ball to go through. The gap between the pipes will not change.\n\
  13. Make a second pipe that will go down to the bottom of the sketch, leaving a\
  \ space between the two pipes that is the size of the gap (see step 12). Make sure\
  \ both pipes use the same value for their x position. Set the lower pipe y value\
  \ by adding the upper pipe height and pipe gap. Ex:\nlowerY = upperPipeHeight +\
  \ pipeGap;\n14. Make the game end when the bird hits the pipe. Figure it out by\
  \ yourself, or use this method:\n```\nboolean intersectsPipes() { \n         if\
  \ (birdY < upperPipeHeight && birdX > pipeX && birdX < (pipeX+pipeWidth)){\n   \
  \         return true; }\n        else if (birdY>lowerPipeTop && birdX > pipeX &&\
  \ birdX < (pipeX+pipeWidth)) {\n            return true; }\n        else { return\
  \ false; }\n}\n```\n15. End the game when the bird hits the ground.\nMake a rectangle\
  \ for the ground.\nUse a boolean variable at the top of the sketch to indicate if\
  \ game has ended.\n17.  Create a score and make it increase each time the bird passes\
  \ through a pipe.\ntext(text, xPosition, yPosition);\n18. OPTIONAL.   Use images\
  \ for the background, pipes and bird (see image at top). You can find your own images,\
  \ or those provided in the Module 3 Java project. See below for code snippets to\
  \ load and draw images.\n\nPImage back;\nPImage pipeBottom;\nPImage pipeTop;\nPImage\
  \ bird;\nvoid setup() {\nback = loadImage(\"flappyBackground.jpg\");\npipeBottom\
  \ = loadImage(\"bottomPipe.png\");\npipeTop = loadImage(\"topPipe.png\");\nbird\
  \ = loadImage(\"bird.png\");\nbird.resize(50,50);\n}\nvoid draw() {\nbackground(back);\n\
  image (pipeBottom,250,375);\nimage (pipeTop,250,-130);\nimage (bird, 250, 300);\n\
  }\n\n\n"
title: 11 Binary Converter
